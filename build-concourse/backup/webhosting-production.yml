jobs:
  - name: feeder
    plan:
      - get: ticker
        trigger: true
      - task: check-feed
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            AWS_ACCESS_KEY_ID: dummyawskey
            AWS_SECRET_ACCESS_KEY: dummyawssecret
            WEB_FEED_FILE_URL: >-
              https://raw.githubusercontent.com/openstax/content-manager-approved-books/master/approved-book-list.json
            CODE_VERSION: dummycodeversion
            WEB_QUEUE_STATE_S3_BUCKET: openstax-web-hosting-content-queue-state
            MAX_BOOKS_PER_TICK: '50'
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                curl "$WEB_FEED_FILE_URL" -o book-feed.json

                source $PROJECT_ROOT/venv/bin/activate

                check-feed book-feed.json "$CODE_VERSION"
                "$WEB_QUEUE_STATE_S3_BUCKET"
                "$CODE_VERSION.web-hosting-queue.json" "$MAX_BOOKS_PER_TICK"
                "archive-dist" "archive"

                # Source: script/check_feed.sh
          inputs: []
          outputs: []
  - name: bakery
    max_in_flight: 5
    plan:
      - get: s3-queue
        trigger: true
        version: every
      - task: task=archive-dequeue-book web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_S3_QUEUE: s3-queue
            IO_BOOK: book
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-dequeue-book
            CODE_VERSION: dummycodeversion
            S3_QUEUE: s3-queue
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: s3-queue
          outputs:
            - name: book
            - name: common-log
      - task: task=archive-fetch web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_FETCHED: archive-fetched
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-fetch
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
          outputs:
            - name: archive-fetched
            - name: common-log
      - task: task=archive-fetch-metadata web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_FETCHED: archive-fetched
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-fetch-metadata
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-fetched
          outputs:
            - name: archive-fetched
            - name: common-log
      - task: task=archive-assemble web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_FETCHED: archive-fetched
            IO_ARCHIVE_BOOK: archive-book
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-assemble
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-fetched
          outputs:
            - name: archive-book
            - name: common-log
      - task: task=archive-assemble-metadata web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_FETCHED: archive-fetched
            IO_ARCHIVE_BOOK: archive-book
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-assemble-metadata
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-fetched
            - name: archive-book
          outputs:
            - name: archive-book
            - name: common-log
      - task: task=archive-link-extras web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_BOOK: archive-book
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-link-extras
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-book
          outputs:
            - name: archive-book
            - name: common-log
      - task: task=archive-bake web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_BOOK: archive-book
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-bake
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-book
          outputs:
            - name: archive-book
            - name: common-log
      - task: task=archive-bake-metadata web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_FETCHED: archive-fetched
            IO_ARCHIVE_BOOK: archive-book
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-bake-metadata
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-fetched
            - name: archive-book
          outputs:
            - name: archive-book
            - name: common-log
      - task: task=archive-checksum web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_BOOK: archive-book
            IO_ARCHIVE_FETCHED: archive-fetched
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-checksum
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-book
            - name: archive-fetched
          outputs:
            - name: archive-book
            - name: common-log
      - task: task=archive-disassemble web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_BOOK: archive-book
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-disassemble
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-book
          outputs:
            - name: archive-book
            - name: common-log
      - task: task=archive-patch-disassembled-links web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_BOOK: archive-book
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-patch-disassembled-links
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-book
          outputs:
            - name: archive-book
            - name: common-log
      - task: task=archive-jsonify web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_BOOK: archive-book
            IO_ARCHIVE_JSONIFIED: archive-jsonified
            IO_ARTIFACTS: artifacts
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-jsonify
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-book
          outputs:
            - name: archive-book
            - name: archive-jsonified
            - name: artifacts
            - name: common-log
      - task: task=archive-validate-xhtml-jsonify web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_JSONIFIED: archive-jsonified
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-validate-xhtml-jsonify
            CODE_VERSION: dummycodeversion
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-jsonified
          outputs:
            - name: common-log
      - task: task=archive-upload-book web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_ARCHIVE_FETCHED: archive-fetched
            IO_ARCHIVE_JSONIFIED: archive-jsonified
            IO_ARCHIVE_BOOK: archive-book
            IO_ARCHIVE_UPLOAD: archive-upload
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-upload-book
            CODE_VERSION: dummycodeversion
            WEB_S3_BUCKET: openstax-web-hosting-content-gatekeeper
            PREVIEW_APP_URL_PREFIX: apps/archive
            AWS_ACCESS_KEY_ID: dummyawskey
            AWS_SECRET_ACCESS_KEY: dummyawssecret
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
            - name: archive-fetched
            - name: archive-jsonified
            - name: archive-book
          outputs:
            - name: archive-upload
            - name: common-log
      - task: task=archive-report-book-complete web
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: openstax/book-pipeline
              tag: dummycodeversion
              username: ((ce-dockerhub-id))
              password: ((ce-dockerhub-token))
          params:
            IO_BOOK: book
            IO_COMMON_LOG: common-log
            TASK_NAME: archive-report-book-complete
            CODE_VERSION: dummycodeversion
            WEB_QUEUE_STATE_S3_BUCKET: openstax-web-hosting-content-queue-state
            AWS_ACCESS_KEY_ID: dummyawskey
            AWS_SECRET_ACCESS_KEY: dummyawssecret
          run:
            path: /bin/bash
            args:
              - '-cxe'
              - >-
                exec > >(tee $IO_COMMON_LOG/log >&2) 2>&1


                [[ $TASK_NAME ]] || { echo "Did not specify a TASK_NAME to run";
                exit 1; }

                [[ -d $IO_COMMON_LOG ]] || { echo "Undefined Environment
                variable: IO_COMMON_LOG"; exit 1; }

                [[ -d $IO_BOOK ]] || { echo "Undefined Environment variable:
                IO_BOOK"; exit 1; }

                [[ $CODE_VERSION ]] || { echo "Undefined Environment variable:
                CODE_VERSION"; exit 1; }


                # These are just mapped because the script prefixes args with
                ARG_

                export
                ARG_S3_BUCKET_NAME=${CORGI_ARTIFACTS_S3_BUCKET:-$WEB_S3_BUCKET}


                TRACE_ON=1 docker-entrypoint.sh $TASK_NAME


                # Source: script/run_task.bash
          inputs:
            - name: book
          outputs:
            - name: common-log
resources:
  - name: s3-queue
    source:
      access_key_id: dummyawskey
      secret_access_key: dummyawssecret
      bucket: openstax-web-hosting-content-queue-state
      initial_version: initializing
      versioned_file: dummycodeversion.web-hosting-queue.json
    type: s3
  - type: time
    name: ticker
    source:
      interval: 12h
