#!/bin/sh
set -e
cd "$(dirname "$0")"

# Generate the Dockerfile out of multiple parts for the CLI (as opposed to the gitpod contianer)
# Used to use https://github.com/edrevo/dockerfile-plus but that was caching the included file
# too heavily with no easy way to clear the cache.

echo '# <>=======()                             ' > Dockerfile
echo '#(/\___   /|\\          ()==========<>_   ' >> Dockerfile
echo '#      \_/ | \\        //|\   ______/ \)  ' >> Dockerfile
echo '#        \_|  \\      // | \_/            ' >> Dockerfile
echo '#          \|\/|\_   //  /\/              ' >> Dockerfile
echo '#           (oo)\ \_//  /                 ' >> Dockerfile
echo '#          //_/\_\/ /  |                  ' >> Dockerfile
echo '#         @@/  |=\  \  |                  ' >> Dockerfile
echo '#              \_=\_ \ |                  ' >> Dockerfile
echo '#                \==\ \|\_ snd            ' >> Dockerfile
echo '#             __(\===\(  )\               ' >> Dockerfile
echo '#            (((~) __(_/   |              ' >> Dockerfile
echo '#                 (((~) \  /              ' >> Dockerfile
echo '#                 ______/ /               ' >> Dockerfile
echo '#                 "------"                ' >> Dockerfile
echo '#                                         ' >> Dockerfile
echo '# ====================================================' >> Dockerfile
echo '# This file is autogenerated. Do not edit it directly.' >> Dockerfile
echo '# Run ./build-dockerfile.sh instead.' >> Dockerfile
echo '# ====================================================' >> Dockerfile
echo '# vvvvvvvvvvvvvvv Dockerfile.common vvvvvvvvvvvvvvv' >> Dockerfile
cat Dockerfile.common >> Dockerfile
echo '# ^^^^^^^^^^^^^^^ Dockerfile.common ^^^^^^^^^^^^^^^' >> Dockerfile
echo '# vvvvvvvvvvv Dockerfile.cli-endmatter vvvvvvvvvvvv' >> Dockerfile
cat Dockerfile.cli-endmatter >> Dockerfile
