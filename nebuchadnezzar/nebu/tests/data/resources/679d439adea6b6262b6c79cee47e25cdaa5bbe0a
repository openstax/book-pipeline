<html xmlns="http://www.w3.org/1999/xhtml">
<head xmlns:c="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml"><title>MSP430 LaunchPad Test Circuit Breadboarding Instructions</title><meta name="created-time" content="2011/03/05 00:39:39 US/Central"/><meta name="revised-time" content="2011/08/16 13:41:50.358 GMT-5"/><meta name="author" content="mwjhnsn"/><meta name="licensor" content="mwjhnsn"/><meta name="license" content="http://creativecommons.org/licenses/by/3.0/"/><meta name="keywords" content="Breadboard, Elec 220, I/O, LaunchPad, MSP 430, Rice"/><meta name="subject" content="Science and Technology"/></head>

<body xmlns="http://www.w3.org/1999/xhtml" xmlns:c="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml" xmlns:qml="http://cnx.rice.edu/qml/1.0" xmlns:mod="http://cnx.rice.edu/#moduleIds" xmlns:bib="http://bibtexml.sf.net/" xmlns:data="http://www.w3.org/TR/html5/dom.html#custom-data-attribute" data-cnxml-to-html-ver="1.3.3"><div data-type="document-title">MSP430 LaunchPad Test Circuit Breadboarding Instructions</div><div data-type="abstract">This module contains step by step instructions and pictures showing how to assemble the MSP430 breadboard kit used in Elec 220 for very simple I/O.  It uses the TI MSP430 Launchpad development board, a double breadboard, and some basic circuit components (switches and a 7-segment display) to establish an easy to understand I/O scheme.</div>
  <section data-depth="1" id="eip-422"><h3 data-type="title">Breadboard Basics</h3><p id="eip-12">The solder-less breadboard is a convenient way to setup simple circuits and make connections quickly between electronic components.  Each hole in the breadboard has a spring clip that makes a connection to the wire/ IC lead you put into it.  <strong>The breadboard connects each vertical row of holes in the main secion</strong>, giving you five holes where you can tie together parts of an electrical circuit.  Any time there is a gap between two adjacent holes, they are not automatically connected together.
</p>

<p id="eip-id1171189419185">
You will notice some red and blue horizontal lines of holes in the top, bottom, and middle of the breadboard.  These are your <strong>busses</strong>.  In most simple breadboards you will use these for power (VCC and GND) as we do here.  The bus sections are not automatically connected together.  If you want power to all of the busses, you need to connect them all together as shown below.
</p>

<p id="eip-id1171190430193">Lastly, notice the divided <strong>channel</strong> down the middle of the breadboard.  This channel is specifically sized for DIP packaged integrated circuits.  You can put a chip across the channel, and have access to each of its pins using the vertical rows above and below.  Always put chips across the channel, otherwise you will connect the opposite side pins together and your circuits won't work as expected.
</p>

<div data-type="note" id="eip-id1171184116986" data-label="warning" data-element-type="warning"><div data-type="title">Be careful when removing chips</div>If you use your bare hands to try and remove a chip from the breadboard (you will notice it can be difficult, especially with components with lots of pins), there is a good chance you will end up with the chip plugged into your finger afterwords.  You hand has a natural tendency to rotate things when you are pulling hard, so watch out.  <strong>There are some IC removing tools around the lab, use one of them or ask your labbies to help you if you accidentally misplace a chip.</strong></div>

<figure id="eip-id1164186994382"><div data-type="title">The Connection Scheme in a Typical Breadboard</div><figcaption>An illustration of how the breadboard holes are connected together in the breadboards used for the lab.  Notice that no connections cross the center channel and that the busses are connected horizontally while the main face of the board is vertical.</figcaption><span data-type="media" id="eip-id1164167475872" data-alt="">
      <img src="/resources/d650d481251e56654cb9c9bec1e2137caf6cb724/Breadboard Connections.png" data-media-type="image/png" alt=""/>
   </span>
   
</figure> 
</section>

<section data-depth="1" id="eip-918"><h3 data-type="title">Steps for Assembling the Breadboard for Elec 220</h3>
	<div data-type="note" id="eip-id1163768025465" data-label="warning" data-element-type="warning">Make all connections with the MSP430 disconnected from USB power.
	</div>

	<div data-type="note" id="eip-755" data-label="warning" data-element-type="warning"><div data-type="title">Be careful when removing chips</div>See above for explanation.  <strong>Use an IC removal tool or ask your labbies for help.</strong></div><p id="eip-820"><span data-type="title">Tinkerers:</span>The wiring below is suggested and works well, but if you have any ideas on how to improve the circuit, feel free to implement them in your breadboard.  Just be sure that you can successfully run the test program at the end.</p><section data-depth="2" id="eip-id1163793291180"><h4 data-type="title">1) Get Your Materials</h4><div data-type="list" id="eip-704"><div data-type="title">You will need:</div><ul><li>1 MSP430 Launchpad</li>
	<li>1 Double Width Breadboard</li>
	<li>1 Breadboard Wire Kit</li>
	<li>1 MC14511B Binary to Decimal Converter</li>
	<li>1 Kingbright Green 7-segment display</li>
	<li>1 4 Switch SPST DIP Switch Pack</li>
	<li>2 470 ohm isolated resistor arrays</li></ul></div>

</section>

<section data-depth="2" id="eip-id1163758762514"><h4 data-type="title">2) Attach the Circuit Components to the Breadboard</h4>

	

	 

		<p id="eip-621">Most of the breadboards should already have their components pre-inserted in the correct places by the labbies.  This section is included for completeness and so you can double check their work if necessary.</p><p id="eip-id1163770468844">The MSP430 launchpad goes in the middle right hand side of the board.  <strong>Its upperleftmost pin goes in hole H47</strong>, and the chip sits across both halves of the breadboard.  Once it's in, put in the 4 toggle dip switch across the channel above the Launchpad.  <strong>The switch's top leftmost pin goes into hole E52.</strong>
		</p>

		<figure id="eip-id1164573619413"><div data-type="title">The MSP430 and DIP Toggle Switches </div><figcaption>Connecting the switch to GPIO pins 0-3</figcaption><span data-type="media" id="eip-id1164589071321" data-alt="">
			  <img src="/resources/99777ecee9c0134376aa2b940a395c959bf27db9/switchPlacement.png" data-media-type="image/png" alt=""/>
		   </span>
		   
		</figure>
		 
		<p id="eip-464">Now insert the decoder IC (the 16 pin chip MC14511BCP) into the board.  The <strong>top leftmost pin goes into hole E21</strong> across the lower breadboard channel.</p> 

		<p id="eip-714">Then put the 7-segment display across the same channel, with its <strong>top leftmost pin in hole C36</strong>.</p>
		 
		<p id="eip-956">Take one of your resistor arrays (the long black sticks with a rubberized coating) and place it with the <strong>leftmost pin in hole B28</strong>, connecting it to the top right pin of the decoder by doing so.</p>

		<p id="eip-933">Lastly, put the other resistor array with its <strong>leftmost pin in hole I21  of the upper half of the breadboard.</strong></p> 

		<figure id="eip-id1164576317609"><div data-type="title">Main Display Components</div><figcaption>The components are close together to prevent long wire runs and simplify the connections between them (taking advantage of the breadboard connections whenever possible).</figcaption><span data-type="media" id="eip-id1164572603788" data-alt="">
			  <img src="/resources/69425edabe3daef81fa0c2c079dec1bd9573806f/componentPlacement.png" data-media-type="image/png" alt=""/>
		   </span>
		   
		</figure>

 
 
</section>

<section data-depth="2" id="eip-id1163762372105"><h4 data-type="title">3) Wire Your Power Busses Together</h4><p id="eip-515">To give some additional flexibility, the breadboard busses aren't automatically connected together.  In our applications, we will want to run all circuits off of the same power used by the MSP430 itself, so we need to tie all the different bus sections together.</p><p id="eip-591"><strong>Using the orange wires in the wiring kit, connect each half of all the horizontal bus strips</strong>.  The wide gaps in the middle of the strips indicate that there is a gap we need to bridge with an external jumper wire.</p>
		
		
		<figure id="eip-id1169491871147"><div data-type="title">Lengthwise Bus Connections</div><figcaption>Notice how the orange and red wires in your kits are sized to exactly bridge the respective gaps in the breadboard.</figcaption><span data-type="media" id="eip-id1169493726855" data-alt="">
				<img src="/resources/9cdf8cbf8e65e21a32d118753a79f2bdb22b6049/busJumpers.png" data-media-type="image/png" alt=""/>
			</span>
			   
			
		</figure>

		<p id="eip-140">Since the lab setup only needs one power level, for convenience tie all the power busses together.  This will allow shorter runs from the chips to whichever bus is closest.  <strong>Using the red wires, connect all three red and all three blue busses together</strong>.  Put the connections off to the far left hand side of the board out of the way of your main circuit.</p><figure id="eip-id1163762923352"><div data-type="title">Vertical Bus Connections</div><figcaption>Notice how the orange and red wires in your kits are sized to exactly bridge the respective gaps in the breadboard.</figcaption><span data-type="media" id="eip-id1163758863100" data-alt="">
				<img src="/resources/5f16c6e50f29a3877def46dbc91d409345a15e63/busLongJumpers.png" data-media-type="image/png" alt=""/>
			</span>
			   
			
		</figure>

		<figure id="eip-id1163759410452"><div data-type="title">Bus Wiring Overall</div><figcaption>Check your work once you are done-- now there should be one continuous connection between all of the red busses and a separate one between all of the blue busses.</figcaption><span data-type="media" id="eip-id1163762363734" data-alt="">
			  <img src="/resources/f095d00e7175bf9bf15d5b1a345d106fc1c99598/busOverview.png" data-media-type="image/png" alt=""/>
		   </span>
		   
		</figure>
</section>





<section data-depth="2" id="eip-id1163781420256"><h4 data-type="title">4) Connect Power to Busses</h4>
		
		<p id="eip-id1163763890817">We already wired the busses together, but now we need to connect the +3.3v and GND provided by the MSP430 Launchpad's USB connection and voltage regulators.  Connect the <strong> blue bus strip to GND (lower F-J column 56) using a green wire</strong> and <strong>the red bus strip to Vcc (upper F-J column 56) using a blue wire. </strong>  You will need to use a <strong>small orange jumper</strong> to cross the upper channel as shown in the picture below.</p>

		<figure id="eip-id1164573520421"><div data-type="title">USB Power to Busses</div><figcaption>Notice the color choice of wires.  For the rest of the construction process, the short green and blue wires are only used for connections to GND and Vcc respectively.</figcaption><span data-type="media" id="eip-id1164577640219" data-alt="show power from pins 1 and 14 on the Launchpad to the + and - busses">
			  <img src="/resources/4b590522ee55ddcde5fb9aa819f7b8a28a6e2dbd/Power from Chip to Bus.png" data-media-type="image/png" alt="show power from pins 1 and 14 on the Launchpad to the + and - busses"/>
		   </span>  

		</figure></section>

		<section data-depth="2" id="eip-id1163762689767"><h4 data-type="title">5) Connect Your Switches to GND</h4><p id="eip-id1163795319149">Use the <strong>green jumper wires to connect the other side of your switches to GND </strong> (the blue bus).  Yes, <strong>the switch pack is upside down</strong>.  This is an intentional design decision that has to do with the pull-up configuration of the MSP430 Launchpad Hardware.  With the switch pack upside down, flipping the switch "up" will register a "1" and flipping them "down" will register a "0" like you would expect.  See the explanation below for more information, or just take it on faith that it works this way.
		</p>

		<figure id="eip-id2021103"><div data-type="title">Switches to GND</div><span data-type="media" id="eip-id1169759221266" data-alt="connect the open end of the DIP switch to VCC">
			  <img src="/resources/9a85078323dbff9e3e2c51437dff6b59e6f470a0/Switch Grounding.png" data-media-type="image/png" alt="connect the open end of the DIP switch to VCC"/>
		   </span>  

		</figure><div data-type="note" id="eip-900" data-label="aside" data-element-type="aside"><p id="eip-id1171178422738">You may notice that turning the switch on connects it to GND, but turning it off connects it to nothing!  This can be really bad in a circuit- the values read from the GPIO pins will be essentially random!  Ideally, you would want your switches to be "1" when up and "0" when down.  To accomplish this, you can either use more expensive dual pole switches that switch between two connections instead of closing or breaking just one, or use what's called a pull up (or pull down) resistor.  This is a resistor of large resistance connected to the rail you want the switch to read when it is open.  The GPIO sees most of the connected voltage when the switch is on (and in digital applications most is enough), but sees the other rail when the switch is open.
		</p>

		<p id="eip-id1171176800573">"But I see no resistors in the picture"-- you're right!  The MSP430 has pull up resistors built in- we just have to enable them when we configure the GPIO pins.  You'll learn more about that in part II of the lab.
		</p>
		</div></section>

		<section data-depth="2" id="eip-id1163762713380"><h4 data-type="title">6) Connect Vcc and Ground to ICs</h4><p id="eip-id1163773743247">The BCD decoder is an active piece of circuitry, so it needs a power connection to work properly.  Connect <strong> Vcc to pin 16 (lower A-E column 21) and GND to pin 8 (lower F-J column 28)</strong>.
		</p>

		<p id="eip-609">The display also needs a common connection to ground (since it is common cathode type).  Connect <strong> pin 3 (lower F-J column 38) to GND.</strong>  The display is just a package of individual LED's in parallel connected to one common ground point.</p><p id="eip-996">Lastly, there are some options (dealing with latching and enabling) on the decoder we want to permanently set in our circuit.  <strong>Connect Vcc to pins 3 and 4 (lower F-J columns 23 and 24) and GND to pin 5 (lower F-J column 25).</strong></p><figure id="eip-id1164575158885"><div data-type="title">Power Connections for Circuit Components</div><figcaption>Notice how the color scheme of blue jumpers for Vcc and green jumpers for GND continues here.  It's good practice to use a consistent color scheme for Vcc and GND since they can fry your chips if mis-applied.</figcaption><span data-type="media" id="eip-id1164572374355" data-alt="shows Vcc to decoder pins 1, 13, and 14 and ground to decoder pins 9 and 12 and display pin 8">
			  <img src="/resources/9661f15e1ad3c2222061d17bddc9458adf0d8870/ICPower.png" data-media-type="image/png" alt="shows Vcc to decoder pins 1, 13, and 14 and ground to decoder pins 9 and 12 and display pin 8"/>
		   </span>  

		</figure>
</section>

<section data-depth="2" id="eip-id1163762346540"><h4 data-type="title">7) Connect the Decoder to the Resistor Arrays</h4>
	<div data-type="note" id="eip-737" data-label="note" data-element-type="note"><div data-type="title">Our resistor arrays</div>The resistor arrays used in this class contain 4 isolated 470 ohm resistors.  We could have just as easily used individual resistors, but this keeps the breadboard clean and prevents accidental shorting from the uninsulated resistor leads.  Every pair of pins in the strip works as if there is a 470 ohm resistor in between them, but each pair exists on its own.  I.E. there is a resistor in between pins 1 and 2 but nothing between 2 and 3.</div><p id="eip-id1163771017207">Connect the first four outputs of the decoder to the upper resistor array.  <strong>Decoder pins 12-15 (lower A-E columns 22-25) fan out to every other pin in the upper array (upper F-J columns 21, 23, 25, 27)</strong> (white wires in image below).
	</p>

	<p id="eip-836">The lower resistor array already has one connection made for us (the decoder pin 9 and pin 1 of the resistor array share the same column).  Run a wire from <strong>decoder pin 10 (lower A-E column 27) to resistor array pin 4 (lower A-E column 31).</strong>  Then connect <strong>decoder pin 11 (lower A-E column 26) to resistor pin 6 (lower A-E column 37).</strong></p><figure id="eip-id1169657477905"><div data-type="title">Decoder Connections</div><figcaption>Resistors have no direction- this layout "skips" pin 3 of the array because of how the wire lengths worked out, but we just connect the "output" side to pin 3 instead.</figcaption><span data-type="media" id="eip-id1169659270327" data-alt="">
		  <img src="/resources/c821c200e76e4a313ff1962daf6f390852e610bd/decoderToResistors.png" data-media-type="image/png" alt=""/>
	   </span>  

	</figure>
</section>
	
	

<section data-depth="2" id="eip-id1163764331934"><h4 data-type="title">8) Connect the Resistor Arrays to the Display</h4>
	
		<p id="eip-514">Since this is the most complicated step, it is broken down into individual sub-steps.  Each picture shows one additional route, eventually connecting all of the resistor array outputs to their respective display inputs.  If you prefer to work on the circuit as one block and would like to see the end result, just skip ahead to step 10.</p><p id="eip-768">Connect the upper <strong>resistor pack pin 4 (upper F-J column 24) to column 31.</strong>  Then connect <strong>column 31 to display pin 10 (lower A-E column 36).</strong></p><figure id="eip-id1169727396375"><div data-type="title">Display Pin 10</div><span data-type="media" id="eip-id1169724186216" data-alt="">
			  <img src="/resources/f2ffeb9ad9e82d17ae76147998d5af8b39488abf/upperResistorOne.png" data-media-type="image/png" alt=""/>
		   </span>  

		</figure>

		<p id="eip-173">Connect the upper <strong>resistor pack pin 2 (upper F-J column 22) to column 32.</strong>  Then connect <strong>column 32 to display pin 9 (lower A-E column 37).</strong></p><figure id="eip-id1164564201810"><div data-type="title">Display Pin 9</div><figcaption>Notice the use of different length horizontal jumpers so the lines going to the display don't cross.</figcaption><span data-type="media" id="eip-id1164588166649" data-alt="">
			  <img src="/resources/01e0d0c5ec3624f10c985edaca0cf49a5f11ed8b/upperResistorTwo.png" data-media-type="image/png" alt=""/>
		   </span>  


		</figure>

		<p id="eip-920">Connect the upper <strong>resistor pack pin 6 (upper F-J column 26) to column 34.</strong>  Then connect <strong>column 34 to display pin 7 (lower A-E column 39).</strong></p><figure id="eip-id1164570016379"><div data-type="title">Display Pin 7</div><figcaption>Display pin 8 is a redundant ground (for circuit placement flexibility).  It is the exact same connection as pin 3 (which is already grounded), so it can be ignored.</figcaption><span data-type="media" id="eip-id1164563231227" data-alt="">
			  <img src="/resources/2091e5de4cad10d94144e1012feb4d88b5e2af76/upperResistorThree.png" data-media-type="image/png" alt=""/>
		   </span>  

		</figure>

		<p id="eip-478">Connect the upper <strong>resistor pack pin 8 (upper F-J column 28) to column 35.</strong>  Then connect <strong>column 35 to display pin 6 (lower A-E column 40).</strong></p><figure id="eip-id1164566800566"><div data-type="title">Display Pin 6</div><span data-type="media" id="eip-id1904122" data-alt="">
			  <img src="/resources/f3135c7d751a8701e0f2befa758f6295ff424020/upperResistorFour.png" data-media-type="image/png" alt=""/>
		   </span>  

		</figure>

		<p id="eip-942">Now start working with the bottom resistor array.  Jump the lower <strong>resistor pack pin 2 (lower A-E column 29) to column 29 F-J on the other side of the channel.</strong>  Then connect <strong>lower F-J column 29 to display pin 1 (lower F-J column 36).</strong></p><figure id="eip-id1164568220512"><div data-type="title">Display Pin 1</div><span data-type="media" id="eip-id1164562412335" data-alt="">
			  <img src="/resources/3993a8ca6fea6395fb2f333e18d25d7cf4356167/lowerResistorOne.png" data-media-type="image/png" alt=""/>
		   </span>  

		</figure>

		<p id="eip-129">Again, jump the lower <strong>resistor pack pin 3 (lower A-E column 30) to column 30 F-J on the other side of the channel.</strong>  Then connect <strong>lower F-J column 30 to display pin 2 (lower F-J column 37).</strong></p><figure id="eip-id1164560863995"><div data-type="title">Display Pin 2</div><span data-type="media" id="eip-id1164572582365" data-alt="">
			  <img src="/resources/df31c9edac99171241185de5a29a278aa503a565/lowerResistorTwo.png" data-media-type="image/png" alt=""/>
		   </span>  

		</figure>

		<p id="eip-873">Finally, jump the lower <strong>resistor pack pin 5 (lower A-E column 32) to column 32 F-J on the other side of the channel.</strong>  Then connect <strong>lower F-J column 32 to display pin 4 (lower F-J column 39).</strong></p><figure id="eip-id1164572470810"><div data-type="title">Display Pin 4</div><figcaption>Now the display should have 7 data connections and 1 common ground connection.</figcaption><span data-type="media" id="eip-id1164561034355" data-alt="">
			  <img src="/resources/36aa5668030b56934629515a889715e6ecc018e9/lowerResistorThree.png" data-media-type="image/png" alt=""/>
		   </span>  

		</figure>

</section>

<section data-depth="2" id="eip-id1163759269986"><h4 data-type="title">9) Connect the GPIO Outputs to the Decoder</h4>

		<div data-type="note" id="eip-145"><div data-type="title">To Mildly OCD Engineers</div>These last wire runs are the messiest in the entire circuit.  Try and keep the wires as straight and flat as possible, but know that these are long wire runs and the sizes will not match exactly.  </div><p id="eip-109">Start with the longest runs from GPIO pins P1.4 and P1.5 on the MSP430 Launchpad (breadboard channels 50 and 51).  Use a long <strong>yellow wire to go from GPIO P1.4 (upper A-E channel 51) to decoder pin 7 (lower F-J channel 27)</strong>.  Then use a long <strong> green wire to go from GPIO P1.5 (upper A-E channel 50) to decoder pin 1 (lower F-J channel 21)</strong>.</p><figure id="eip-id1165440208021"><div data-type="title">Overall Run from GPIO to Decoder</div><figcaption>The yellow wire is barely long enough, so it has to go at a bit of a diagonal.</figcaption><span data-type="media" id="eip-id1165440214769" data-alt="">
			  <img src="/resources/3d77322a59a1e6117a8f61d978e62b3325e2dc87/pinFourFiveOverview.png" data-media-type="image/png" alt=""/>
		   </span>  

		</figure>

		<figure id="eip-id1165454389876"><div data-type="title">Closeups on Both Connections</div><figure id="eip-id1171956880180"><div data-type="title">GPIO Connection Closeup</div>
		<span data-type="media" id="eip-id1165455950434" data-alt="">
		  <img src="/resources/c0e8a9b04325673689409ebdba60dd32afb8427e/pinFourFiveCloseup.png" data-media-type="image/png" alt="" width="375"/>
		</span>  
</figure>
		
<figure id="eip-id1171941614784"><div data-type="title">Decoder Connection Closeup</div>		
		<span data-type="media" id="eip-id1164695158636" data-alt="">
		  <img src="/resources/004fb36279733f32ce567daa53fb6080bef5399d/gpioToDecoderOneCloseup.png" data-media-type="image/png" alt="" width="375"/>
		</span>  
</figure></figure>


		

		
		<p id="eip-887">Now use two of the long orange wires to connect <strong> GPIO 1.7 (lower F-J column 51) to decoder pin 6 (lower F-J column 26) and GPIO 1.6 (lower F-J column 50) to decoder pin 2 (lower F-J column 22).</strong>  Be careful not to accidentally cross the connections!  See below for one way to bed the wires so they fit the length of the wire run.</p>



		<figure id="eip-id1169502713677"><div data-type="title">The GPIO to Decoder Connections</div><span data-type="media" id="eip-id1169503180822" data-alt="">
			  <img src="/resources/096fdad9b26807fe54ee0a0e2486bc1ad45cb849/pinSixSevenOverview.png" data-media-type="image/png" alt=""/>
			</span>  
			
		</figure>

		<figure id="eip-id1165440197948" data-orient="horizontal"><div data-type="title">Connecting GPIO Pins 6 and 7 to the Decoder</div><figure id="eip-id1169497325654"><div data-type="title">GPIO Connection Closeup</div><span data-type="media" id="eip-id1165443054763" data-alt="">
			  <img src="/resources/5f5e8be013e89d85099448ff95d2cdabf57a0aa6/pinSixSevenCloseup.png" data-media-type="image/png" alt="" width="375"/>
			</span>
		</figure>

		<figure id="eip-id1169504422744"><div data-type="title">Decoder Connection Closeup</div><span data-type="media" id="eip-id1169495755732" data-alt="">
			  <img src="/resources/6194ca1f332154fd80d5dec71bebcfc02dbe01da/pinSixSevenDecoderCloseup.png" data-media-type="image/png" alt="" width="375"/>
			</span>  
		</figure>

		</figure>



</section>

	<section data-depth="2" id="eip-id1163772497548"><h4 data-type="title">10) Test Your Circuit</h4><p id="eip-id1163797060462">Now that you've completed your breadboard, you are ready to begin!  It is <strong>strongly</strong> recommended that you run the provided test program to make sure all of you connections have been made correctly.  Knowing that there are no issues with your underlying hardware will make troubleshooting down the road much less frustrating.
		</p>

		<figure id="completedCircuitFigure"><div data-type="title">Completed Circuit</div><span data-type="media" id="eip-id1165444617251" data-alt="">
			  <img src="/resources/5560c499cdf26aa835827aef8c053e85f8f453e9/completedCircuit.png" data-media-type="image/png" alt=""/>
		   </span>  
		
		</figure>
	</section>
</section>


</body>

</html>