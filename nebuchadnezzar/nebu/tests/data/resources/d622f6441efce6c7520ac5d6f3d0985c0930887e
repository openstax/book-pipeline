<document xmlns="http://cnx.rice.edu/cnxml" xmlns:md="http://cnx.rice.edu/mdml" xmlns:bib="http://bibtexml.sf.net/" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:q="http://cnx.rice.edu/qml/1.0" id="new" cnxml-version="0.7" module-id="new">

<title>MSP430 LaunchPad Test Circuit Breadboarding Instructions</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml" mdml-version="0.5">
  <!-- WARNING! The 'metadata' section is read only. Do not edit below.
       Changes to the metadata section in the source will not be saved. -->
  <md:repository>http://cnx.org/content</md:repository>
  <md:content-url>http://cnx.org/content/m37152/latest/</md:content-url>
  <md:content-id>m37152</md:content-id>
  <md:title>MSP430 LaunchPad Test Circuit Breadboarding Instructions</md:title>
  <md:version>1.3</md:version>
  <md:created>2011/03/05 00:39:39 US/Central</md:created>
  <md:revised>2011/08/16 13:41:50.358 GMT-5</md:revised>
  <md:actors>
    <md:person userid="cavallar">
      <md:firstname>Joseph</md:firstname>
      <md:surname>Cavallaro</md:surname>
      <md:fullname>Joseph Cavallaro</md:fullname>
      <md:email>cavallar@rice.edu</md:email>
    </md:person>
    <md:person userid="mwjhnsn">
      <md:firstname>Matthew</md:firstname>
      <md:surname>Johnson</md:surname>
      <md:fullname>Matthew Johnson</md:fullname>
      <md:email>mwj1@rice.edu</md:email>
    </md:person>
  </md:actors>
  <md:roles>
    <md:role type="author">mwjhnsn</md:role>
    <md:role type="maintainer">mwjhnsn cavallar</md:role>
    <md:role type="licensor">mwjhnsn</md:role>
    <md:role type="editor">cavallar</md:role>
  </md:roles>
  <md:license url="http://creativecommons.org/licenses/by/3.0/"/>
  <!-- For information on license requirements for use or modification, see license url in the
       above <md:license> element.
       For information on formatting required attribution, see the URL:
         CONTENT_URL/content_info#cnx_cite_header
       where CONTENT_URL is the value provided above in the <md:content-url> element.
  -->
  <md:keywordlist>
    <md:keyword>Breadboard</md:keyword>
    <md:keyword>Elec 220</md:keyword>
    <md:keyword>I/O</md:keyword>
    <md:keyword>LaunchPad</md:keyword>
    <md:keyword>MSP 430</md:keyword>
    <md:keyword>Rice</md:keyword>
  </md:keywordlist>
  <md:subjectlist>
    <md:subject>Science and Technology</md:subject>
  </md:subjectlist>
  <md:abstract>This module contains step by step instructions and pictures showing how to assemble the MSP430 breadboard kit used in Elec 220 for very simple I/O.  It uses the TI MSP430 Launchpad development board, a double breadboard, and some basic circuit components (switches and a 7-segment display) to establish an easy to understand I/O scheme.</md:abstract>
  <md:language>en</md:language>
  <!-- WARNING! The 'metadata' section is read only. Do not edit above.
       Changes to the metadata section in the source will not be saved. -->
</metadata>

<content>
  <section id="eip-422"><title>Breadboard Basics</title><para id="eip-12">The solder-less breadboard is a convenient way to setup simple circuits and make connections quickly between electronic components.  Each hole in the breadboard has a spring clip that makes a connection to the wire/ IC lead you put into it.  <emphasis>The breadboard connects each vertical row of holes in the main secion</emphasis>, giving you five holes where you can tie together parts of an electrical circuit.  Any time there is a gap between two adjacent holes, they are not automatically connected together.
</para>

<para id="eip-id1171189419185">
You will notice some red and blue horizontal lines of holes in the top, bottom, and middle of the breadboard.  These are your <emphasis>busses</emphasis>.  In most simple breadboards you will use these for power (VCC and GND) as we do here.  The bus sections are not automatically connected together.  If you want power to all of the busses, you need to connect them all together as shown below.
</para>

<para id="eip-id1171190430193">Lastly, notice the divided <emphasis>channel</emphasis> down the middle of the breadboard.  This channel is specifically sized for DIP packaged integrated circuits.  You can put a chip across the channel, and have access to each of its pins using the vertical rows above and below.  Always put chips across the channel, otherwise you will connect the opposite side pins together and your circuits won't work as expected.
</para>

<note id="eip-id1171184116986" type="warning"><title>Be careful when removing chips</title>If you use your bare hands to try and remove a chip from the breadboard (you will notice it can be difficult, especially with components with lots of pins), there is a good chance you will end up with the chip plugged into your finger afterwords.  You hand has a natural tendency to rotate things when you are pulling hard, so watch out.  <emphasis>There are some IC removing tools around the lab, use one of them or ask your labbies to help you if you accidentally misplace a chip.</emphasis></note>

<figure id="eip-id1164186994382"><title>The Connection Scheme in a Typical Breadboard</title><media id="eip-id1164167475872" alt="">
      <image mime-type="image/png" src="Breadboard Connections.png"/>
   </media>
   
<caption>An illustration of how the breadboard holes are connected together in the breadboards used for the lab.  Notice that no connections cross the center channel and that the busses are connected horizontally while the main face of the board is vertical.</caption></figure> 
</section>

<section id="eip-918">
	<title>Steps for Assembling the Breadboard for Elec 220</title>
	<note id="eip-id1163768025465" type="warning">Make all connections with the MSP430 disconnected from USB power.
	</note>

	<note id="eip-755" type="warning"><title>Be careful when removing chips</title>See above for explanation.  <emphasis>Use an IC removal tool or ask your labbies for help.</emphasis></note><para id="eip-820"><title>Tinkerers:</title>The wiring below is suggested and works well, but if you have any ideas on how to improve the circuit, feel free to implement them in your breadboard.  Just be sure that you can successfully run the test program at the end.</para><section id="eip-id1163793291180"><title>1) Get Your Materials</title><list id="eip-704"><title>You will need:</title><item>1 MSP430 Launchpad</item>
	<item>1 Double Width Breadboard</item>
	<item>1 Breadboard Wire Kit</item>
	<item>1 MC14511B Binary to Decimal Converter</item>
	<item>1 Kingbright Green 7-segment display</item>
	<item>1 4 Switch SPST DIP Switch Pack</item>
	<item>2 470 ohm isolated resistor arrays</item></list>

</section>

<section id="eip-id1163758762514">

<title>2) Attach the Circuit Components to the Breadboard</title>

	

	 

		<para id="eip-621">Most of the breadboards should already have their components pre-inserted in the correct places by the labbies.  This section is included for completeness and so you can double check their work if necessary.</para><para id="eip-id1163770468844">The MSP430 launchpad goes in the middle right hand side of the board.  <emphasis>Its upperleftmost pin goes in hole H47</emphasis>, and the chip sits across both halves of the breadboard.  Once it's in, put in the 4 toggle dip switch across the channel above the Launchpad.  <emphasis>The switch's top leftmost pin goes into hole E52.</emphasis>
		</para>

		<figure id="eip-id1164573619413"><title>The MSP430 and DIP Toggle Switches </title><media id="eip-id1164589071321" alt="">
			  <image mime-type="image/png" src="switchPlacement.png"/>
		   </media>
		   
		<caption>Connecting the switch to GPIO pins 0-3</caption></figure>
		 
		<para id="eip-464">Now insert the decoder IC (the 16 pin chip MC14511BCP) into the board.  The <emphasis>top leftmost pin goes into hole E21</emphasis> across the lower breadboard channel.</para> 

		<para id="eip-714">Then put the 7-segment display across the same channel, with its <emphasis>top leftmost pin in hole C36</emphasis>.</para>
		 
		<para id="eip-956">Take one of your resistor arrays (the long black sticks with a rubberized coating) and place it with the <emphasis>leftmost pin in hole B28</emphasis>, connecting it to the top right pin of the decoder by doing so.</para>

		<para id="eip-933">Lastly, put the other resistor array with its <emphasis>leftmost pin in hole I21  of the upper half of the breadboard.</emphasis></para> 

		<figure id="eip-id1164576317609"><title>Main Display Components</title><media id="eip-id1164572603788" alt="">
			  <image mime-type="image/png" src="componentPlacement.png"/>
		   </media>
		   
		<caption>The components are close together to prevent long wire runs and simplify the connections between them (taking advantage of the breadboard connections whenever possible).</caption></figure>

 
 
</section>

<section id="eip-id1163762372105"><title>3) Wire Your Power Busses Together</title><para id="eip-515">To give some additional flexibility, the breadboard busses aren't automatically connected together.  In our applications, we will want to run all circuits off of the same power used by the MSP430 itself, so we need to tie all the different bus sections together.</para><para id="eip-591"><emphasis>Using the orange wires in the wiring kit, connect each half of all the horizontal bus strips</emphasis>.  The wide gaps in the middle of the strips indicate that there is a gap we need to bridge with an external jumper wire.</para>
		
		
		<figure id="eip-id1169491871147"><title>Lengthwise Bus Connections</title><media id="eip-id1169493726855" alt="">
				<image mime-type="image/png" src="busJumpers.png"/>
			</media>
			   
			
		<caption>Notice how the orange and red wires in your kits are sized to exactly bridge the respective gaps in the breadboard.</caption></figure>

		<para id="eip-140">Since the lab setup only needs one power level, for convenience tie all the power busses together.  This will allow shorter runs from the chips to whichever bus is closest.  <emphasis>Using the red wires, connect all three red and all three blue busses together</emphasis>.  Put the connections off to the far left hand side of the board out of the way of your main circuit.</para><figure id="eip-id1163762923352"><title>Vertical Bus Connections</title><media id="eip-id1163758863100" alt="">
				<image mime-type="image/png" src="busLongJumpers.png"/>
			</media>
			   
			
		<caption>Notice how the orange and red wires in your kits are sized to exactly bridge the respective gaps in the breadboard.</caption></figure>

		<figure id="eip-id1163759410452"><title>Bus Wiring Overall</title><media id="eip-id1163762363734" alt="">
			  <image mime-type="image/png" src="busOverview.png"/>
		   </media>
		   
		<caption>Check your work once you are done-- now there should be one continuous connection between all of the red busses and a separate one between all of the blue busses.</caption></figure>
</section>





<section id="eip-id1163781420256">
	<title>4) Connect Power to Busses</title>
		
		<para id="eip-id1163763890817">We already wired the busses together, but now we need to connect the +3.3v and GND provided by the MSP430 Launchpad's USB connection and voltage regulators.  Connect the <emphasis> blue bus strip to GND (lower F-J column 56) using a green wire</emphasis> and <emphasis>the red bus strip to Vcc (upper F-J column 56) using a blue wire. </emphasis>  You will need to use a <emphasis>small orange jumper</emphasis> to cross the upper channel as shown in the picture below.</para>

		<figure id="eip-id1164573520421"><title>USB Power to Busses</title><media id="eip-id1164577640219" alt="show power from pins 1 and 14 on the Launchpad to the + and - busses">
			  <image mime-type="image/png" src="Power from Chip to Bus.png"/>
		   </media>  

		<caption>Notice the color choice of wires.  For the rest of the construction process, the short green and blue wires are only used for connections to GND and Vcc respectively.</caption></figure></section>

		<section id="eip-id1163762689767"><title>5) Connect Your Switches to GND</title><para id="eip-id1163795319149">Use the <emphasis>green jumper wires to connect the other side of your switches to GND </emphasis> (the blue bus).  Yes, <emphasis>the switch pack is upside down</emphasis>.  This is an intentional design decision that has to do with the pull-up configuration of the MSP430 Launchpad Hardware.  With the switch pack upside down, flipping the switch "up" will register a "1" and flipping them "down" will register a "0" like you would expect.  See the explanation below for more information, or just take it on faith that it works this way.
		</para>

		<figure id="eip-id2021103"><title>Switches to GND</title><media id="eip-id1169759221266" alt="connect the open end of the DIP switch to VCC">
			  <image mime-type="image/png" src="Switch Grounding.png"/>
		   </media>  

		</figure><note id="eip-900" type="aside"><para id="eip-id1171178422738">You may notice that turning the switch on connects it to GND, but turning it off connects it to nothing!  This can be really bad in a circuit- the values read from the GPIO pins will be essentially random!  Ideally, you would want your switches to be "1" when up and "0" when down.  To accomplish this, you can either use more expensive dual pole switches that switch between two connections instead of closing or breaking just one, or use what's called a pull up (or pull down) resistor.  This is a resistor of large resistance connected to the rail you want the switch to read when it is open.  The GPIO sees most of the connected voltage when the switch is on (and in digital applications most is enough), but sees the other rail when the switch is open.
		</para>

		<para id="eip-id1171176800573">"But I see no resistors in the picture"-- you're right!  The MSP430 has pull up resistors built in- we just have to enable them when we configure the GPIO pins.  You'll learn more about that in part II of the lab.
		</para>
		</note></section>

		<section id="eip-id1163762713380"><title>6) Connect Vcc and Ground to ICs</title><para id="eip-id1163773743247">The BCD decoder is an active piece of circuitry, so it needs a power connection to work properly.  Connect <emphasis> Vcc to pin 16 (lower A-E column 21) and GND to pin 8 (lower F-J column 28)</emphasis>.
		</para>

		<para id="eip-609">The display also needs a common connection to ground (since it is common cathode type).  Connect <emphasis> pin 3 (lower F-J column 38) to GND.</emphasis>  The display is just a package of individual LED's in parallel connected to one common ground point.</para><para id="eip-996">Lastly, there are some options (dealing with latching and enabling) on the decoder we want to permanently set in our circuit.  <emphasis>Connect Vcc to pins 3 and 4 (lower F-J columns 23 and 24) and GND to pin 5 (lower F-J column 25).</emphasis></para><figure id="eip-id1164575158885"><title>Power Connections for Circuit Components</title><media id="eip-id1164572374355" alt="shows Vcc to decoder pins 1, 13, and 14 and ground to decoder pins 9 and 12 and display pin 8">
			  <image mime-type="image/png" src="ICPower.png"/>
		   </media>  

		<caption>Notice how the color scheme of blue jumpers for Vcc and green jumpers for GND continues here.  It's good practice to use a consistent color scheme for Vcc and GND since they can fry your chips if mis-applied.</caption></figure>
</section>

<section id="eip-id1163762346540">
	<title>7) Connect the Decoder to the Resistor Arrays</title>
	<note id="eip-737" type="note"><title>Our resistor arrays</title>The resistor arrays used in this class contain 4 isolated 470 ohm resistors.  We could have just as easily used individual resistors, but this keeps the breadboard clean and prevents accidental shorting from the uninsulated resistor leads.  Every pair of pins in the strip works as if there is a 470 ohm resistor in between them, but each pair exists on its own.  I.E. there is a resistor in between pins 1 and 2 but nothing between 2 and 3.</note><para id="eip-id1163771017207">Connect the first four outputs of the decoder to the upper resistor array.  <emphasis>Decoder pins 12-15 (lower A-E columns 22-25) fan out to every other pin in the upper array (upper F-J columns 21, 23, 25, 27)</emphasis> (white wires in image below).
	</para>

	<para id="eip-836">The lower resistor array already has one connection made for us (the decoder pin 9 and pin 1 of the resistor array share the same column).  Run a wire from <emphasis>decoder pin 10 (lower A-E column 27) to resistor array pin 4 (lower A-E column 31).</emphasis>  Then connect <emphasis>decoder pin 11 (lower A-E column 26) to resistor pin 6 (lower A-E column 37).</emphasis></para><figure id="eip-id1169657477905"><title>Decoder Connections</title><media id="eip-id1169659270327" alt="">
		  <image mime-type="image/png" src="decoderToResistors.png"/>
	   </media>  

	<caption>Resistors have no direction- this layout "skips" pin 3 of the array because of how the wire lengths worked out, but we just connect the "output" side to pin 3 instead.</caption></figure>
</section>
	
	

<section id="eip-id1163764331934">
	<title>8) Connect the Resistor Arrays to the Display</title>
	
		<para id="eip-514">Since this is the most complicated step, it is broken down into individual sub-steps.  Each picture shows one additional route, eventually connecting all of the resistor array outputs to their respective display inputs.  If you prefer to work on the circuit as one block and would like to see the end result, just skip ahead to step 10.</para><para id="eip-768">Connect the upper <emphasis>resistor pack pin 4 (upper F-J column 24) to column 31.</emphasis>  Then connect <emphasis>column 31 to display pin 10 (lower A-E column 36).</emphasis></para><figure id="eip-id1169727396375"><title>Display Pin 10</title><media id="eip-id1169724186216" alt="">
			  <image mime-type="image/png" src="upperResistorOne.png"/>
		   </media>  

		</figure>

		<para id="eip-173">Connect the upper <emphasis>resistor pack pin 2 (upper F-J column 22) to column 32.</emphasis>  Then connect <emphasis>column 32 to display pin 9 (lower A-E column 37).</emphasis></para><figure id="eip-id1164564201810"><title>Display Pin 9</title><media id="eip-id1164588166649" alt="">
			  <image mime-type="image/png" src="upperResistorTwo.png"/>
		   </media>  


		<caption>Notice the use of different length horizontal jumpers so the lines going to the display don't cross.</caption></figure>

		<para id="eip-920">Connect the upper <emphasis>resistor pack pin 6 (upper F-J column 26) to column 34.</emphasis>  Then connect <emphasis>column 34 to display pin 7 (lower A-E column 39).</emphasis></para><figure id="eip-id1164570016379"><title>Display Pin 7</title><media id="eip-id1164563231227" alt="">
			  <image mime-type="image/png" src="upperResistorThree.png"/>
		   </media>  

		<caption>Display pin 8 is a redundant ground (for circuit placement flexibility).  It is the exact same connection as pin 3 (which is already grounded), so it can be ignored.</caption></figure>

		<para id="eip-478">Connect the upper <emphasis>resistor pack pin 8 (upper F-J column 28) to column 35.</emphasis>  Then connect <emphasis>column 35 to display pin 6 (lower A-E column 40).</emphasis></para><figure id="eip-id1164566800566"><title>Display Pin 6</title><media id="eip-id1904122" alt="">
			  <image mime-type="image/png" src="upperResistorFour.png"/>
		   </media>  

		</figure>

		<para id="eip-942">Now start working with the bottom resistor array.  Jump the lower <emphasis>resistor pack pin 2 (lower A-E column 29) to column 29 F-J on the other side of the channel.</emphasis>  Then connect <emphasis>lower F-J column 29 to display pin 1 (lower F-J column 36).</emphasis></para><figure id="eip-id1164568220512"><title>Display Pin 1</title><media id="eip-id1164562412335" alt="">
			  <image mime-type="image/png" src="lowerResistorOne.png"/>
		   </media>  

		</figure>

		<para id="eip-129">Again, jump the lower <emphasis>resistor pack pin 3 (lower A-E column 30) to column 30 F-J on the other side of the channel.</emphasis>  Then connect <emphasis>lower F-J column 30 to display pin 2 (lower F-J column 37).</emphasis></para><figure id="eip-id1164560863995"><title>Display Pin 2</title><media id="eip-id1164572582365" alt="">
			  <image mime-type="image/png" src="lowerResistorTwo.png"/>
		   </media>  

		</figure>

		<para id="eip-873">Finally, jump the lower <emphasis>resistor pack pin 5 (lower A-E column 32) to column 32 F-J on the other side of the channel.</emphasis>  Then connect <emphasis>lower F-J column 32 to display pin 4 (lower F-J column 39).</emphasis></para><figure id="eip-id1164572470810"><title>Display Pin 4</title><media id="eip-id1164561034355" alt="">
			  <image mime-type="image/png" src="lowerResistorThree.png"/>
		   </media>  

		<caption>Now the display should have 7 data connections and 1 common ground connection.</caption></figure>

</section>

<section id="eip-id1163759269986"><title>9) Connect the GPIO Outputs to the Decoder</title>

		<note id="eip-145"><title>To Mildly OCD Engineers</title>These last wire runs are the messiest in the entire circuit.  Try and keep the wires as straight and flat as possible, but know that these are long wire runs and the sizes will not match exactly.  </note><para id="eip-109">Start with the longest runs from GPIO pins P1.4 and P1.5 on the MSP430 Launchpad (breadboard channels 50 and 51).  Use a long <emphasis>yellow wire to go from GPIO P1.4 (upper A-E channel 51) to decoder pin 7 (lower F-J channel 27)</emphasis>.  Then use a long <emphasis> green wire to go from GPIO P1.5 (upper A-E channel 50) to decoder pin 1 (lower F-J channel 21)</emphasis>.</para><figure id="eip-id1165440208021"><title>Overall Run from GPIO to Decoder</title><media id="eip-id1165440214769" alt="">
			  <image mime-type="image/png" src="pinFourFiveOverview.png"/>
		   </media>  

		<caption>The yellow wire is barely long enough, so it has to go at a bit of a diagonal.</caption></figure>

		<figure id="eip-id1165454389876"><title>Closeups on Both Connections</title><subfigure id="eip-id1171956880180">
<title>GPIO Connection Closeup</title>
		<media id="eip-id1165455950434" alt="">
		  <image mime-type="image/png" src="pinFourFiveCloseup.png" width="375"/>
		</media>  
</subfigure>
		
<subfigure id="eip-id1171941614784">
<title>Decoder Connection Closeup</title>		
		<media id="eip-id1164695158636" alt="">
		  <image mime-type="image/png" src="gpioToDecoderOneCloseup.png" width="375"/>
		</media>  
</subfigure></figure>


		

		
		<para id="eip-887">Now use two of the long orange wires to connect <emphasis> GPIO 1.7 (lower F-J column 51) to decoder pin 6 (lower F-J column 26) and GPIO 1.6 (lower F-J column 50) to decoder pin 2 (lower F-J column 22).</emphasis>  Be careful not to accidentally cross the connections!  See below for one way to bed the wires so they fit the length of the wire run.</para>



		<figure id="eip-id1169502713677"><title>The GPIO to Decoder Connections</title><media id="eip-id1169503180822" alt="">
			  <image mime-type="image/png" src="pinSixSevenOverview.png"/>
			</media>  
			
		</figure>

		<figure id="eip-id1165440197948" orient="horizontal"><title>Connecting GPIO Pins 6 and 7 to the Decoder</title><subfigure id="eip-id1169497325654">
			<title>GPIO Connection Closeup</title><media id="eip-id1165443054763" alt="">
			  <image mime-type="image/png" src="pinSixSevenCloseup.png" width="375"/>
			</media>
		</subfigure>

		<subfigure id="eip-id1169504422744">
			<title>Decoder Connection Closeup</title><media id="eip-id1169495755732" alt="">
			  <image mime-type="image/png" src="pinSixSevenDecoderCloseup.png" width="375"/>
			</media>  
		</subfigure>

		</figure>



</section>

	<section id="eip-id1163772497548"><title>10) Test Your Circuit</title><para id="eip-id1163797060462">Now that you've completed your breadboard, you are ready to begin!  It is <emphasis>strongly</emphasis> recommended that you run the provided test program to make sure all of you connections have been made correctly.  Knowing that there are no issues with your underlying hardware will make troubleshooting down the road much less frustrating.
		</para>

		<figure id="completedCircuitFigure"><title>Completed Circuit</title><media id="eip-id1165444617251" alt="">
			  <image mime-type="image/png" src="completedCircuit.png"/>
		   </media>  
		
		</figure>
	</section>
</section>


</content>

</document>