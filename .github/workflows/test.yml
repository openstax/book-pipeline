name: Docker build and test

# https://stackoverflow.com/a/67136237
on:
  pull_request:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      # Agressive cache invalidation: https://github.com/satackey/action-docker-layer-caching/issues/55
      # - run: echo "WEEK=$(date +%U)" >> $GITHUB_ENV
      # - uses: satackey/action-docker-layer-caching@v0.0.11
      #   # Ignore the failure of a step and avoid terminating the job.
      #   continue-on-error: true
      #   with:
      #     key: ${{ github.workflow }}-${{ env.WEEK }}-{hash}
      #     restore-keys: |
      #       ${{ github.workflow }}-${{ env.WEEK }}-
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install pipenv & Setting up environment
        run: |
          python -m pip install --upgrade pipenv wheel
          sudo apt-get install -y imagemagick icc-profiles-free ghostscript
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
#      - name: Install submodules
#        run: ./install-submodules.sh
#      - name: update visual dependency graphs and verify typescript code builds concourse files and the step-config.json file
#        run: CI_TEST=true ./test/test-step-00.bash
#      - name: prepare directories and build container
#        run: CI_TEST=true ./test/test-step-01.bash
#      - name: Run all-git-pdf
#        run: CI_TEST=true ./test/test-step-02.bash
#      - name: Run all-git-web
#        run: CI_TEST=true ./test/test-step-03.bash
#      - name: Run all-archive-web
#        run: CI_TEST=true ./test/test-step-04.bash
#      - name: Run all-archive-gdoc
#        run: CI_TEST=true ./test/test-step-05.bash
#      - name: Run the last step of all-archive-gdoc (archive-convert-docx)
#        run: CI_TEST=true ./test/test-step-06.bash
#      - name: Run all-archive-pdf
#        run: CI_TEST=true ./test/test-step-07.bash
      - name: Run Bakery Scripts Tests
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: CI_TEST=true ./test/test-step-10.bash
#      - name: Collect coverage and upload
#        run: CI_TEST=true ./test/test-step-08.bash
#      - name: Lint scripts
#        run: CI_TEST=true ./test/test-step-09.bash